{"version":3,"sources":["../../../src/@ionic-native/plugins/native-geocoder/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAExE;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AASH,IAAa,cAAc;IAAS,kCAAiB;IAArD;;IA6BA,CAAC;IA3BC;;;;;OAKG;IAIH,uCAAc,GAAd,UAAe,QAAgB,EAAE,SAAiB,IAA0C,MAAM,CAAC,CAAC,CAAC;IAErG;;;;OAIG;IAIH,uCAAc,GAAd,UAAe,aAAqB,IAA0C,MAAM,CAAC,CAAC,CAAC;IAQzF,qBAAC;AAAD,CA7BA,AA6BC,CA7BmC,iBAAiB,GA6BpD;AANM,yBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,6BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAjBA;IAHC,OAAO,CAAC;QACP,aAAa,EAAE,SAAS;KACzB,CAAC;;;;oDACmG;AAUrG;IAHC,OAAO,CAAC;QACP,aAAa,EAAE,SAAS;KACzB,CAAC;;;;oDACqF;AArB5E,cAAc;IAR1B,MAAM,CAAC;QACN,UAAU,EAAE,gBAAgB;QAC5B,MAAM,EAAE,+BAA+B;QACvC,SAAS,EAAE,gBAAgB;QAC3B,IAAI,EAAE,gEAAgE;QACtE,SAAS,EAAE,CAAC,KAAK,EAAE,SAAS,CAAC;KAC9B,CAAC;GAEW,cAAc,CA6B1B;SA7BY,cAAc","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\r\n\r\n/**\r\n * @beta\r\n * @name Native Geocoder\r\n * @description\r\n * Cordova plugin for native forward and reverse geocoding\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { NativeGeocoder, NativeGeocoderReverseResult, NativeGeocoderForwardResult } from '@ionic-native/native-geocoder';\r\n *\r\n * constructor(private nativeGeocoder: NativeGeocoder) { }\r\n *\r\n * ...\r\n *\r\n * this.nativeGeocoder.reverseGeocode(52.5072095, 13.1452818)\r\n *   .then((result: NativeGeocoderReverseResult) => console.log('The address is ' + result.street + ' in ' + result.countryCode))\r\n *   .catch((error: any) => console.log(error));\r\n *\r\n * this.nativeGeocoder.forwardGeocode('Berlin')\r\n *   .then((coordinates: NativeGeocoderForwardResult) => console.log('The coordinates are latitude=' + coordinates.latitude + ' and longitude=' + coordinates.longitude))\r\n *   .catch((error: any) => console.log(error));\r\n * ```\r\n * @interfaces\r\n * NativeGeocoderReverseResult\r\n * NativeGeocoderForwardResult\r\n */\r\n@Plugin({\r\n  pluginName: 'NativeGeocoder',\r\n  plugin: 'cordova-plugin-nativegeocoder',\r\n  pluginRef: 'nativegeocoder',\r\n  repo: 'https://github.com/sebastianbaar/cordova-plugin-nativegeocoder',\r\n  platforms: ['iOS', 'Android']\r\n})\r\n\r\nexport class NativeGeocoder extends IonicNativePlugin {\r\n\r\n  /**\r\n   * Reverse geocode a given latitude and longitude to find location address\r\n   * @param latitude {number} The latitude\r\n   * @param longitude {number} The longitude\r\n   * @return {Promise<any>}\r\n   */\r\n  @Cordova({\r\n    callbackOrder: 'reverse'\r\n  })\r\n  reverseGeocode(latitude: number, longitude: number): Promise<NativeGeocoderReverseResult> { return; }\r\n\r\n  /**\r\n   * Forward geocode a given address to find coordinates\r\n   * @param addressString {string} The address to be geocoded\r\n   * @return {Promise<any>}\r\n   */\r\n  @Cordova({\r\n    callbackOrder: 'reverse'\r\n  })\r\n  forwardGeocode(addressString: string): Promise<NativeGeocoderForwardResult> { return; }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\r\n/**\r\n * Encapsulates format information about a reverse geocoding result.\r\n */\r\nexport interface NativeGeocoderReverseResult {\r\n  /**\r\n   * The street.\r\n   */\r\n  street: string;\r\n  /**\r\n   * The house number.\r\n   */\r\n  houseNumber: string;\r\n  /**\r\n   * The postal code.\r\n   */\r\n  postalCode: string;\r\n  /**\r\n   * The city.\r\n   */\r\n  city: string;\r\n  /**\r\n   * The district.\r\n   */\r\n  district: string;\r\n  /**\r\n   * The country name.\r\n   */\r\n  countryName: string;\r\n  /**\r\n   * The country code.\r\n   */\r\n  countryCode: string;\r\n}\r\n/**\r\n * Encapsulates format information about a forward geocoding result.\r\n */\r\nexport interface NativeGeocoderForwardResult {\r\n  /**\r\n   * The latitude.\r\n   */\r\n  latitude: string;\r\n  /**\r\n   * The longitude.\r\n   */\r\n  longitude: string;\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}